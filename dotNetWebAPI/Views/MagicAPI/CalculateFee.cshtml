@model dotNetWebAPI.Models.CalculateFeeModels.FEE
@using dotNetWebAPI.Models;
@using dotNetWebAPI.Helpers;

@{
    ViewBag.Title = "Calculate Fee";
}
<div class="loader"></div>
<h2>Calculate Fee (POST)</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Magic Calculate Fee POST Using .NET XDocument XML</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.clientKey, htmlAttributes: new { @class = "control-label col-md-2" })
            <i class="fa fa-question-circle right" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="Client api key (unique identifier) i.e. '8E3F2...' usually 32 characters in length" aria-hidden="true"></i>
            <div class="col-md-4">
                @Html.EditorFor(model => model.clientKey, new { htmlAttributes = new { @class = "form-control", @Value = "8E3F20CE5619431D9BE737FD80E3E990" } })
                @Html.ValidationMessageFor(model => model.clientKey, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.paymentMethod, htmlAttributes: new { @class = "control-label col-md-2" })
            <i class="fa fa-question-circle right" title="" data-placement="right" data-toggle="tooltip" href="#" data-html="true" data-original-title="0 for Credit Card<br>1 for Check" aria-hidden="true"></i>
            <div class="col-md-4">
                @Html.EditorFor(model => model.paymentMethod, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                @Html.ValidationMessageFor(model => model.paymentMethod, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.cardType, htmlAttributes: new { @class = "control-label col-md-2" })
            <i class="fa fa-question-circle right" title="" data-placement="right" data-toggle="tooltip" href="#" data-html="true" data-original-title="3 for AMEX<br>4 for VISA<br>5 for MasterCard<br>6 for Discovery" aria-hidden="true"></i>
            <div class="col-md-4">
                @Html.EditorFor(model => model.cardType, new { htmlAttributes = new { @class = "form-control", @Value = "4" } })
                @Html.ValidationMessageFor(model => model.cardType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.collectionMode, htmlAttributes: new { @class = "control-label col-md-2" })
            <i class="fa fa-question-circle right" title="" data-placement="right" data-toggle="tooltip" href="#" data-html="true" data-original-title="1 for Web<br>2 for POS (manual)<br> 3 for POS (scanned)<br>4 for Tel<br>5 for IVR<br>6 for Email<br>7 for Pre-Authorization<br>8 for Web (other)<br>9 for Mailroom-Dropbox (manual)<br>10 for Mailroom-Dropbox (scanned)" aria-hidden="true"></i>
            <div class="col-md-4">
                @Html.EditorFor(model => model.collectionMode, new { htmlAttributes = new { @class = "form-control", @Value = "1" } })
                @Html.ValidationMessageFor(model => model.collectionMode, "", new { @class = "text-danger" })
            </div>
        </div>
      
       
        <div class="form-group">
            @Html.LabelFor(model => model.lineItems[0].paymentType, htmlAttributes: new { @class = "control-label col-md-2" })
            <i class="fa fa-question-circle right" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="Client payment type name i.e. 'Business Tax' or whatever client provided as a value. Used for the purpose of a join between the CSI portal and the client's MIS and/or CIS systems" aria-hidden="true"></i>
            <div class="col-md-4">
                @Html.EditorFor(model => model.lineItems[0].paymentType, new { htmlAttributes = new { @class = "form-control", @Value = "Business Tax" } })
                @Html.ValidationMessageFor(model => model.lineItems[0].paymentType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.lineItems[0].amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <div class="input-group">
                    <div class="input-group-addon">$</div>
                    @Html.EditorFor(model => model.lineItems[0].amount, new { htmlAttributes = new { @class = "form-control", @id = "amount" } })
                    @Html.ValidationMessageFor(model => model.lineItems[0].amount, "", new { @class = "text-danger" })
                    <div class="input-group-addon">.00</div>
                </div>
            </div>
        </div>
      
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Submit" class="btn btn-primary btn-lg btnSubmit" />
            </div>
        </div>
    </div>
}
<p>
    @{
        Html.RenderPartial("_CalculateFeeResponsePartial", TempData["CalculateFeeResponse"]);
    }
</p>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}